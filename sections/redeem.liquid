{% schema %}
  {
    "name": "Redeem Code",
    "settings": [],
    "presets": [
      {
        "name": "Redeem Code"
      }
    ]
  }
{% endschema %}

<style>
  .bg-gradient {
    background: linear-gradient(217deg, rgba(0, 0, 0, 0.00) 2.15%, rgba(181, 25, 4, 0.24) 50.18%, rgba(0, 0, 0, 0.00) 98.2%);
  }
  @media (min-width: 1024px) {
    .lg\:w-3\/5 {
      width: 60% !important;
    }
  }
  .spinner {
    display: none;
    width: 20px;
    height: 20px;
    border: 3px solid #000;
    border-top: 3px solid transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-left: 10px;
    margin-top: 10px;
    box-shadow: 0px 0px 9px 0px #000;
  }
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  .btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
  .btn:hover .spinner {
    border: 3px solid #5bc500;
    border-top: 3px solid transparent;
    box-shadow: 0px 0px 9px 0px #5bc500;
  }
  .question-mark {
    display: inline-block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #5bc500;
    color: #000;
    text-align: center;
    line-height: 20px;
    cursor: pointer;
    margin-left: 5px;
  }
  .popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #000;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 0 10px rgba(0,0,0,0.3);
    z-index: 1000;
    max-width: 80%;
    width: 400px;
    border: 3px solid #5bc500;
    box-shadow: 0px 0px 9px 0px #5bc500;
    font-size: 16px;
  }

  .user-info {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    padding: 15px;
    background: rgba(91, 197, 0, 0.1);
    border-radius: 8px;
  }

  .user-headshot {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    margin-right: 15px;
    border: 2px solid #5bc500;
  }

  .user-details {
    flex-grow: 1;
  }

  .user-name {
    font-family: 'Hello Roti', sans-serif;
    font-size: 20px;
    color: #5bc500;
    margin-bottom: 5px;
  }

  .user-id {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);
  }

  @media screen and (min-width: 750px) {
.popup {
      font-size: 18px;
}
}


  .popup-close {
    position: absolute;
top: 3px;
  right: 19px;
  cursor: pointer;
  font-size: 36px;
  }
  .popup-title {
    font-weight: bold;
    margin-bottom: 10px;
  }
  .alert {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 15px;
    border-radius: 5px;
    color: #fff;
    font-weight: bold;
    z-index: 1001;
    text-align: center;
  }
  .alert-success {
    background-color: #5bc500;
  }
  .alert-error {
    background-color: #ff0000;
  }

  .popup ol {

  list-style: number !important;
  }

  #confirm-redeem {
text-transform: uppercase;
  background: black !important;
  color: var(--color-primary) !important;
  font-family: 'Hello Roti', sans-serif !important;
  font-size: 18px;
  }

  @media screen and (min-width: 750px) {
  #confirm-redeem{
    font-size: 24px;
  }
}
</style>

<div class="page-width">
  <div id="redeem-container" class="bg-gradient br bn flex flex-col items-center justify-center gap-8 px-6 py-12">
    <h3 class="color-primary mb-12">Redeem your code</h3>
    <div class="flex flex-col w-full lg:w-3/5">
      <label for="userId" class="pl-6" style="font-family: 'Hello Roti', sans-serif;">
        Roblox User ID
        <span class="question-mark" id="userId-help">?</span>
      </label>
      <input class="bn br py-4 bg-transparent mt-4 px-6" type="text" id="userId" name="userId" required>
    </div>
    <div class="flex flex-col w-full lg:w-3/5">
      <label for="dlcCode" class="pl-6" style="font-family: 'Hello Roti', sans-serif;">DLC Code</label>
      <input class="bn br py-4 bg-transparent mt-4 px-6" type="text" id="dlcCode" name="dlcCode" required>
    </div>
    <button class="btn btn--ghost mt-24 lg:w-3/5" id="redeem-button">
      Redeem
      <span class="spinner" id="redeem-spinner"></span>
    </button>
  </div>

  <div id="result-container"></div>
</div>

<div id="userId-popup" class="popup">
  <span class="popup-close">&times;</span>
  <div class="popup-title">How to find your Roblox User ID</div>
  <ol class="ml-6">
    <li class="mb-2">Go to <a href="https://www.roblox.com" target="_blank">roblox.com</a> on mobile or desktop browser. (This information is not available within the Roblox app)</li>
    <li class="mb-2">Login to your account</li>
    <li class="mb-2">Go to your Profile</li>
    <li class="mb-2">Click in the website URL at the top of the page</li>
    <li class="mb-2">Locate the set of numbers between users/ and /profile. This set of numbers is your Roblox User ID</li>
    <li class="mb-2">Highlight and copy the set of numbers</li>
    <li class="mb-2">On the Telanthric Redeem page, paste the set of numbers into the "Roblox User ID" field</li>
  </ol>
  <p class="mt-8 pt-4" style="border-top: 3px solid #5bc500 ">Note: Your User ID will always stay the same, even if you change your Roblox username</p>
</div>

<div id="confirm-popup" class="popup">
  <span class="popup-close">&times;</span>
  <div class="popup-title">Confirm Redemption</div>
  <div class="user-info">
    <img id="user-headshot" class="user-headshot" src="" alt="User headshot" width="60" height="60">
    <div class="user-details">
      <div id="user-name" class="user-name"></div>
      <div id="user-id" class="user-id"></div>
    </div>
  </div>
  <p>Please verify this is the correct Roblox account before proceeding with redemption.</p>
  <div class="mt-8 pt-4 flex justify-between" style="border-top: 3px solid #5bc500 ">
    <button id="continue-editing">Cancel</button>
    <button id="confirm-redeem">Redeem</button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const redeemButton = document.getElementById('redeem-button');
    const redeemContainer = document.getElementById('redeem-container');
    const resultContainer = document.getElementById('result-container');
    const redeemSpinner = document.getElementById('redeem-spinner');
    const userIdHelp = document.getElementById('userId-help');
    const userIdPopup = document.getElementById('userId-popup');
    const confirmPopup = document.getElementById('confirm-popup');
    const continueEditing = document.getElementById('continue-editing');
    const confirmRedeem = document.getElementById('confirm-redeem');

    function enableLoading() {
      redeemButton.disabled = true;
      redeemSpinner.style.display = 'inline-block';
      redeemButton.textContent = 'Processing ';
      redeemButton.appendChild(redeemSpinner);
    }

    function disableLoading() {
      redeemButton.disabled = false;
      redeemSpinner.style.display = 'none';
      redeemButton.textContent = 'Redeem';
    }

    function showPopup(popup) {
      popup.style.display = 'block';
    }

    function hidePopup(popup) {
      popup.style.display = 'none';
    }

    function showAlert(message, type) {
      const alertElement = document.createElement('div');
      alertElement.className = `alert alert-${type}`;
      alertElement.textContent = message;
      document.body.appendChild(alertElement);
      setTimeout(() => {
        alertElement.remove();
      }, 5000);
    }

    userIdHelp.addEventListener('click', function() {
      showPopup(userIdPopup);
    });

    document.querySelectorAll('.popup-close').forEach(function(closeBtn) {
      closeBtn.addEventListener('click', function() {
        hidePopup(this.closest('.popup'));
      });
    });

    redeemButton.addEventListener('click', async function() {
      const userId = document.getElementById('userId').value;
      const dlcCode = document.getElementById('dlcCode').value;

      if (!userId || !dlcCode) {
        resultContainer.textContent = 'Please enter both Roblox User ID and DLC Code.';
        return;
      }

      try {
        const response = await fetch(`http://localhost/user-info/${userId}`);
        const userData = await response.json();
        
        if (userData.success) {
          document.getElementById('user-headshot').src = userData.headshot || '';
          document.getElementById('user-name').textContent = userData.username || '';
          document.getElementById('user-id').textContent = `ID: ${userId}`;
          showPopup(confirmPopup);
        } else {
          showAlert('Unable to verify user information. Please check the User ID.', 'error');
        }
      } catch (error) {
        console.error('Error fetching user info:', error);
        showAlert('Error verifying user information. Please try again.', 'error');
      }
    });

    continueEditing.addEventListener('click', function() {
      hidePopup(confirmPopup);
    });

    confirmRedeem.addEventListener('click', function() {
      hidePopup(confirmPopup);
      const userId = document.getElementById('userId').value;
      const dlcCode = document.getElementById('dlcCode').value;

      enableLoading();

      fetch('https://api.telanthric.shop/redeem', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ username: userId, code: dlcCode }),
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(errorData => {
            throw new Error(errorData.error || errorData.message || `HTTP error! status: ${response.status}`);
          });
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
            setTimeout(() => {
            checkQueue(userId);
            }, 1000);
        } else {
          showAlert(data.message || 'An error occurred. Please try again.', 'error');
          resultContainer.textContent = data.message || 'An error occurred. Please try again.';
          disableLoading();
        }
      })
      .catch(error => {
        showAlert(error.message || 'An error occurred. Please try again.', 'error');
        resultContainer.textContent = error.message || 'An error occurred. Please try again.';
        console.error('Error:', error);
        disableLoading();
      });
    });

        function checkQueue(username) {
        fetch('https://api.telanthric.shop/check', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ username }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.prompt == true) {
           completeClaim(username)
          } else {
            resultContainer.textContent = data.error || data.message || 'Username is not in queue. Please try again.';
            disableLoading();
          }
        })
        .catch(error => {
          resultContainer.textContent = 'An error occurred. Please try again.';
          console.error('Error:', error);
          disableLoading();
        });
      }

      function completeClaim(username) {
        fetch('https://api.telanthric.shop/claim', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ username }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showAlert(`Redemption successful! Rewards: ${data.rewards.join(', ')}`, 'success');
            resultContainer.textContent = `Redemption successful! Rewards: ${data.rewards.join(', ')}`;
             disableLoading();
          } else {
            resultContainer.textContent = data.message || data.error || 'An error occurred. Please try again.';
            disableLoading();
          }
        })
        .catch(error => {
          resultContainer.textContent = 'An error occurred. Please try again.';
          console.error('Error:', error);
          disableLoading();
        });
        }
  });
</script>
